
visu:BinaryClassificationTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:BinaryClassification ;
    sh:property [
        sh:path visu:hasBinaryClassificationMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:RandomForestClassifierMethod ]
            [ sh:class ml:ExtraTreesClassifierMethod ]
            [ sh:class ml:BaggingClassifierMethod ]
            [ sh:class ml:GradientBoostingClassifierMethod ]
            [ sh:class ml:AdaBoostClassifierMethod ]
            [ sh:class ml:VotingClassifierMethod ]
            [ sh:class ml:StackingClassifierMethod ]
            [ sh:class ml:HistGradientBoostingClassifierMethod ]
        ) ;
        sh:message "BinaryClassification must be connected with one compatible atomic method." ;
    ] .

visu:MulticlassClassificationTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:MulticlassClassification ;
    sh:property [
        sh:path visu:hasMulticlassClassificationMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:RandomForestClassifierMethod ]
            [ sh:class ml:ExtraTreesClassifierMethod ]
            [ sh:class ml:GradientBoostingClassifierMethod ]
            [ sh:class ml:AdaBoostClassifierMethod ]
            [ sh:class ml:HistGradientBoostingClassifierMethod ]
        ) ;
        sh:message "MulticlassClassification must be connected with one compatible atomic method." ;
    ] .

visu:RandomForestRegressionTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:RandomForestRegression ;
    sh:property [
        sh:path visu:hasRandomForestRegressionMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:RandomForestRegressorMethod ]
            [ sh:class ml:ExtraTreesRegressorMethod ]
        ) ;
        sh:message "RandomForestRegression must be connected with one compatible atomic method." ;
    ] .

visu:DataProcessingTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:DataProcessing ;
    sh:property [
        sh:path visu:hasDataProcessingMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:RandomTreesEmbeddingMethod ]
        ) ;
        sh:message "DataProcessing must be connected with one compatible atomic method." ;
    ] .

visu:RegularizedRegressionTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:RegularizedRegression ;
    sh:property [
        sh:path visu:hasRegularizedRegressionMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:BaggingRegressorMethod ]
            [ sh:class ml:VotingRegressorMethod ]
            [ sh:class ml:StackingRegressorMethod ]
        ) ;
        sh:message "RegularizedRegression must be connected with one compatible atomic method." ;
    ] .

visu:ClusteringTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:Clustering ;
    sh:property [
        sh:path visu:hasClusteringMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:IsolationForestMethod ]
        ) ;
        sh:message "Clustering must be connected with one compatible atomic method." ;
    ] .

visu:BoostingRegressionTaskMethodShape a sh:NodeShape ;
    sh:targetClass ml:BoostingRegression ;
    sh:property [
        sh:path visu:hasBoostingRegressionMethod ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:class ml:GradientBoostingRegressorMethod ]
            [ sh:class ml:AdaBoostRegressorMethod ]
            [ sh:class ml:HistGradientBoostingRegressorMethod ]
        ) ;
        sh:message "BoostingRegression must be connected with one compatible atomic method." ;
    ] .
